задача 21

Даны координаты трех вершин треугольника: (x1,y1), (x2,y2), (x3,y3). Найти его периметр и площадь, используя формулу для расстояния между двумя точками на плоскости (см. задание Begin20. Для нахождения площади треугольника со сторонами a, b, c использовать формулу Герона:

#include <iostream>
#include <cmath>
using namespace std;
int main(){
	double x1,y1,x2,y2,x3,y3,a,b,c,P,p,S;
	cout << "введіть координати першої вершини (x1, y1): ";
	cin >> x1 >> y1;
	cout << "введіть координати другої вершини (x2, y2): ";
	cin >> x2 >> y2;
	cout << "введіть координати третьої вершини (x3, y3): ";
	cin >> x3 >> y3;
	a = sqrt(pow((x1-x2),2)+pow((y1-y2),2));
	b = sqrt(pow((x1-x3),2)+pow((y1-y3),2));
	c = sqrt(pow((x2-x3),2)+pow((y2-y3),2));
	P = a+b+c; //периметр
	p = P/2; //напівпериметр
	S = sqrt(p*(p-a)*(p-b)*(p-c));
	cout << "периметр: " << P << "." << endl;
	cout << "площа': " << S << "." << endl;
	return 0;
}

задача 30

Дано значение угла α в радианах (0<α<2π). Определить значение этого же угла в градусах, учитывая, что 180o=π радианов. В качестве значения π использовать 3.14.

#include <iostream>
using namespace std;
int main(){
	const double pi=3.14;
	double angleR,angleG;
	cout << "введить значення кута в радианах: ";
	cin >> angleR;
	angleG = angleR*180/pi;
	cout << "кут в градусах: " << a_g << endl;
	return 0;
}

задача 39

Найти корни квадратного уравнения A∗x2+B∗x+C=0, заданного своими коэффициентами A, B, C (коэффициент A не равен 0), если известно, что дискриминант уравнения положителен. Вывести вначале меньший, а затем больший из найденных корней. Корни квадратного уравнения находятся по формуле x1=(−B+√D)/(2∗A),  x2=(−B−√D)/(2∗A), где D — дискриминант, равный B2−4∗A∗C.

#include <iostream>
#include <cmath>
using namespace std;
int main() {
    double A, B, C, x1, x2;

    cout << "введіть значення змінних A, B, C: ";
    cin >> A >> B >> C;

    double D = B * B - 4 * A * C;

    if (D > 0) {
      
        x1 = (-B+sqrt(D))/(2*A);
        x2 = (-B -sqrt(D))/(2*A);

       
        if (x1 < x2) {
            cout << "менший корінь: " << x1 << endl;
            cout << "більший корінь: " << x2 << endl;
        } else {
            cout << "менший корінь: " << x2 << endl;
            cout << "більший корінь: " << x1 << endl;
        }
    } else {
        cout << "дискримінант <=0, корні не мають значення" << endl;
    }

    return 0;
}
